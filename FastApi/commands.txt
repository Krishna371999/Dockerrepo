docker ps # To view the containers
docker ps -aq # To view the all running containers
docker images # To view the images
docker stop <container_name> #Stops the running container.
docker start <container_name> #starts the container
docker attach <container_name> #moves into interactive mode of container created.
docker rmi $(dockerimages -aq) --force #Remove all the images available.
docker rm $(docker ps -aq) --force #Removes all the available containers.
docker exec -it <container_name> bash #It will take inside your computer.
docker system prune -a  # Important Notes:
         Images that you built but are not currently used by any container will be removed.
         Stopped containers (maybe used for debugging or backups) will be gone.
         It does not delete volumes unless you explicitly add the --volumes flag.

docker build -t tyrion/h:v1 -f Dockerfile.Multistage . #Declaring specific file in current folder to build.
         here above "." says that we need to copy/add files from current directory from where we are running the command.
        for ex: we have files in differant folder not in current folder where we are running actually then we have specify folder name specifically as mentioned below.
docker build -t tyrion/h:v1 -f Dockerfile.Multistage <folder_name>
####################################################################################################33

##pull a image from dockerhub
docker pull centos:latest #this will pull the image from docker hub.

###Step 1: Create container from Image
docker run -d --name app1 -p 80:80 centos:latest

###Step2: Create Image from running container
docker commit <container name> <new image name>
### Create new container from above image
docker run -it --name <new cont name> <$new image name> /bin/bash

###To inspect image
docker image inspect <Image_name>


docker build --progress=plain -t lannicont
What --progress=plain does:
It forces Docker to show all logs in a simple, line-by-line formatâ€”with no animations, no truncation, no overwriting lines.
docker build --progress=plain --no-cache -t lanniimg . #To remove Cache
 docker run -d --name app1 -p 80:80 lanniimg